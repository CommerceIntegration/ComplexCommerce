//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Architectural overview and usage guide: 
// http://blogofrab.blogspot.com/2010/08/maintenance-free-mocking-for-unit.html
//------------------------------------------------------------------------------
using System.Data;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Common;
using System.Data.Entity;
using System.Data.Entity.Validation;
using System.Data.Entity.Infrastructure;

namespace ComplexCommerce.Data.SqlServer.Model
{
    /// <summary>
    /// The functional concrete db context. This is just like the normal
    /// context that would be generated using the POCO artefact generator, 
    /// apart from the fact that this one implements an interface containing 
    /// the entity set properties and exposes <code>IDbSet</code>
    /// instances for entity set properties.
    /// </summary>
    public partial class ComplexCommerce : DbContext, IComplexCommerce 
    {
        public ComplexCommerce()
            : base("name=ComplexCommerce")
        {
            this.Configuration.LazyLoadingEnabled = true;
        }
    
    	public ComplexCommerce(string connectionString)
            : base(connectionString)
        {
            this.Configuration.LazyLoadingEnabled = true;
        }
    
        #region IDbSet Properties
        public IDbSet<Chain> Chain { get; set; }
        public IDbSet<Product> Product { get; set; }
        public IDbSet<CategoryXProductXTenantLocale> CategoryXProductXTenantLocale { get; set; }
        public IDbSet<ProductXTenantLocale> ProductXTenantLocale { get; set; }
        public IDbSet<TenantLocale> TenantLocale { get; set; }
        public IDbSet<Category> Category { get; set; }
        public IDbSet<Page> Page { get; set; }
        public IDbSet<Tenant> Tenant { get; set; }

        #endregion

    }
}
